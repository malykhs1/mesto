(()=>{"use strict";function e(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var t=function t(n,r){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),e(this,"_hasInvalidInput",(function(){return o._inputList.some((function(e){return!e.validity.valid}))})),e(this,"toggleButtonState",(function(){o._hasInvalidInput()?o.disableSubmitButton():(o._buttonElement.classList.remove(o._submitButtonUnactive),o._buttonElement.disabled=!1)})),e(this,"disableSubmitButton",(function(){o._buttonElement.classList.add(o._submitButtonUnactive),o._buttonElement.disabled=!0})),e(this,"_showInputError",(function(e,t){var n=o._form.querySelector(".".concat(e.id,"-error"));e.classList.add(o._inputErrorClass),n.classList.add(o._errorClass),n.textContent=t})),e(this,"_hideInputError",(function(e){var t=o._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(o._inputErrorClass),t.classList.remove(o._errorClass),t.textContent=""})),e(this,"_isValid",(function(e){e.validity.valid?o._hideInputError(e):o._showInputError(e,e.validationMessage)})),e(this,"_setEventListeners",(function(){o._inputList.forEach((function(e){e.addEventListener("input",(function(){o._isValid(e),o.toggleButtonState()}))}))})),e(this,"enableValidation",(function(){o._setEventListeners(o._form),o._form.addEventListener("submit",(function(e){e.preventDefault()}))})),this._formElement=n.formElement,this._inputElement=n.inputElement,this._submitButton=n.submitButton,this._submitButtonUnactive=n.submitButtonUnactive,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass,this._form=r,this._buttonElement=this._form.querySelector(this._submitButton),this._inputList=Array.from(this._form.querySelectorAll(this._inputElement))};function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var o=function(){function e(t){var n=this,o=t.data,i=t.cardSelector,u=t.userId,c=t.handlers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_toggleLIke",(function(){n._handleLikeClick(n._cardId,n.isLiked).then((function(e){n._likeButton.classList.toggle("card__like_active"),n.isLiked=!n.isLiked,n._likesCounter.textContent=e.likes.length})).catch((function(e){console.log(e)}))})),r(this,"likeCardClickByUser",(function(e){n._likes.some((function(e){return e._id===n._userId}))&&n._likeButton.classList.add("card__like_active")})),r(this,"updateLikes",(function(e){n._likesCounter.textContent=n._likes.length})),r(this,"_deleteCheck",(function(){n._userId!==n._ownerId?n._deleteButton.classList.add("card__delete-button_hiden"):n._deleteButton.classList.remove("card__delete-button_hiden")})),r(this,"_setEventListeners",(function(){n._likeButton.addEventListener("click",(function(){n._toggleLIke()})),n._deleteButton.addEventListener("click",(function(){n._handleDeleteButton()})),n._cardImage.addEventListener("click",(function(){n._handleCardClick(n._name,n._link)}))})),r(this,"deleteCard",(function(){n._element.remove(),n._element=null})),this._name=o.name,this._link=o.link,this._ownerId=o.owner._id,this._likes=o.likes,this._cardId=o._id,this._userId=u,this._cardSelector=i,this._handleCardClick=c.handleCardClick,this._handleLikeClick=c.handleLikeClick,this._handleDeleteButton=c.handleDeleteButton}var t,o;return t=e,(o=[{key:"getCardId",value:function(){return this._cardId}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardTitle=this._element.querySelector(".card__title"),this._cardImage=this._element.querySelector(".card__image"),this._likeButton=this._element.querySelector(".card__like"),this._likesCounter=this._element.querySelector(".card__likes-counter"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._deleteCheck(),this._setEventListeners(),this._element}}])&&n(t.prototype,o),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._cardSelector=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){return e._renderer(t)}))}},{key:"setItem",value:function(e){this._cardSelector.prepend(e)}}])&&i(t.prototype,n),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupSelector.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupSelector.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleCloseByOverlay",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupSelector.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()})),this._popupSelector.addEventListener("click",(function(t){e._handleCloseByOverlay(t)}))}}])&&c(t.prototype,n),e}();function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(e,t,n){return(f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImage=t._popupSelector.querySelector(".popup__image"),t._popupTitleImage=t._popupSelector.querySelector(".popup__title"),t}return t=u,(n=[{key:"open",value:function(e,t){f(d(u.prototype),"open",this).call(this),this._popupTitleImage.textContent=e,this._popupImage.alt=t,this._popupImage.src=t}}])&&l(t.prototype,n),u}(a);function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function k(e,t){return!t||"object"!==y(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var S=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function u(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._popupForm=t._popupSelector.querySelector(".popup__form"),t._inputList=t._popupForm.querySelectorAll(".popup__input"),t._handleFormSubmit=r,t}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputObject={},this._inputList.forEach((function(t){return e._inputObject[t.name]=t.value})),this._inputObject}},{key:"setEventListeners",value:function(){var e=this;v(g(u.prototype),"setEventListeners",this).call(this),this._popupSelector.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){this._popupForm.reset(),v(g(u.prototype),"close",this).call(this)}}])&&m(t.prototype,n),u}(a);function E(e){return(E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(e,t,n){return(w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function O(e,t){return(O=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function L(e,t){return!t||"object"!==E(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function I(e){return(I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&O(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupForm=t._popupSelector.querySelector(".popup__form"),t._confirmButton=t._popupSelector.querySelector(".popup__save-button"),t}return t=u,(n=[{key:"setEventListeners",value:function(){var e=this;console.log(this._popupForm),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmitCallback()})),w(I(u.prototype),"setEventListeners",this).call(this)}},{key:"setNewHandler",value:function(e){this._handleFormSubmitCallback=e}},{key:"renderButtonText",value:function(e){this._confirmButton.textContent=e?"Удаление...":"Да"}}])&&C(t.prototype,n),u}(a);function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=t,this._userJob=n,this._userAvatar=r}var t,n;return t=e,(n=[{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userJob.textContent=e.about,this._userAvatar.src=e.avatar}},{key:"getUserInfo",value:function(){var e={};return e.name=this._userName.textContent,e.job=this._userJob.textContent,e.avatar=this._userAvatar.src,e}}])&&B(t.prototype,n),e}();function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q,T,x=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}},{key:"getServerCards",value:function(){return fetch("".concat(this._url,"/cards"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"addNewCard",value:function(e,t){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}},{key:"setUserInfo",value:function(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}},{key:"setAvatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}},{key:"likeCard",value:function(e,t){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:t?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"deleteCardRequest",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&P(t.prototype,n),e}(),U={formElement:".popup__form",inputElement:".popup__input",submitButton:".popup__save-button",submitButtonUnactive:"popup__save-button-unvalid",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"},F=document.querySelector(".popup_type_id"),D=document.querySelector(".popup_type_avatar"),N=document.getElementById("form-edit-profile"),A=document.getElementById("form-edit-avatar"),V=document.querySelector(".profile__edit-button"),J=document.querySelector(".profile__avatar-button"),H=document.getElementById("name"),G=document.getElementById("job"),z=document.querySelector(".profile__name"),M=document.querySelector(".profile__job"),K=document.querySelector(".profile__avatar"),Q=document.getElementById("form-edit-card"),W=document.querySelector(".popup_type_form"),X=document.querySelector(".profile__add-button"),Y=document.querySelector(".popup_type_image"),Z=document.querySelector(".popup_type_confirm"),$=(document.querySelector(".card__image"),document.querySelector(".card__like"),document.querySelector(".elements")),ee=new x({url:"https://mesto.nomoreparties.co/v1/cohort-26",headers:{"content-type":"application/json",authorization:"b22e628d-a32e-4f98-97fa-aa25d8506b10"}});function te(e,t){e.querySelector(".popup__save-button").textContent=t?"Сохранение...":"Сохранить"}function ne(e,t){se.open(e,t)}function re(e){var t=new o({data:e,cardSelector:"#card-template",userId:T,handlers:{handleLikeClick:function(e,t){return ee.likeCard(e,t)},handleCardClick:ne,handleDeleteButton:function(){return function(e){ae.open(),ae.setNewHandler((function(){ae.renderButtonText(!0),ee.deleteCardRequest(e.getCardId()).then((function(){e.deleteCard(),ae.close()})).catch((function(e){console.log(e)})).finally((function(){ae.renderButtonText(!1)}))}))}(t)}}}),n=t.generateCard();return t.likeCardClickByUser(n),t.updateLikes(n),n}ee.getServerCards().then((function(e){(q=new u({items:e,renderer:function(e){var t=re(e);q.setItem(t)}},$)).renderItems()})).catch((function(e){console.log(e)})),ee.getUserInfo().then((function(e){T=e._id,ce.setUserInfo(e)})).catch((function(e){console.log(e)}));var oe=new S({popupSelector:W,handleFormSubmit:function(e){te(W,!0),ee.addNewCard(e.title,e.link).then((function(e){var t=re(e);q.setItem(t)})).catch((function(e){console.log(e)})).finally((function(){te(W,!1),oe.close()}))}});oe.setEventListeners();var ie=new S({popupSelector:F,handleFormSubmit:function(e){te(F,!0),ee.setUserInfo(e.name,e.job).then((function(e){ce.setUserInfo(e)})).catch((function(e){console.log(e)})).finally((function(){te(F,!1),ie.close()}))}});ie.setEventListeners();var ue=new S({popupSelector:D,handleFormSubmit:function(e){te(D,!0),ee.setAvatar(e.avatar).then((function(e){ce.setUserInfo(e)})).catch((function(e){console.log(e)})).finally((function(){te(D,!1),ue.close()}))}});ue.setEventListeners();var ce=new R(z,M,K),ae=new j(Z);ae.setEventListeners();var se=new _(Y);se.setEventListeners(),X.addEventListener("click",(function(){oe.open()})),V.addEventListener("click",(function(){var e=ce.getUserInfo();H.value=e.name,G.value=e.job,ie.open()})),J.addEventListener("click",(function(){ue.open()})),new t(U,N).enableValidation(),new t(U,Q).enableValidation(),new t(U,A).enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,